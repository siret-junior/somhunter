import React from "react";
import { connect } from "react-redux";
import { Container, Row, Col, Button } from "react-bootstrap";

// ---

// *** Config generated by the Core API ***
import config from "../../../__config_generated__.json";
// *** Config generated by the Core API ***
import { useSettings } from "../../../hooks/useSettings";
import { createFetchAndSwitchSearchState } from "../../../actions/userCreator";

function switchSearchSessionHandler(s, props, ctxId) {
  if (typeof ctxId === "undefined" || ctxId === null) {
    throw Error("Invalid parameters.");
  }

  s.dispatch(createFetchAndSwitchSearchState(s, ctxId));
}

function getBookmarkedFrames(s, props) {
  const data = props.search.bookmarkedFrames;
  
  const jsx = data.map((x, i) => {
    const scrFilepath = x.src;

    return (
      <li
        className={`bookmark-item`}
        key={`bookmark${i}`}
        onClick={(e) => null      }
      >
        <img src={scrFilepath} alt={x.id} />
        <span className="title">{x.id}</span>
      </li>
    );
  });

  return <>{jsx}</>;
}

function BookmarksPanel(props) {
  const s = useSettings();

  return (
    <Container fluid className="bookmarks-panel panel">
      <Row>
        <Col xs={12}>
          <h1 className="panel-title visible">Bookmarks</h1>
          <ul className="history-list">{getBookmarkedFrames(s, props)}</ul>
        </Col>
      </Row>
    </Container>
  );
}

const stateToProps = ({ user }) => {
  return { history: user.history, search: user.search };
};

export default connect(stateToProps)(BookmarksPanel);
