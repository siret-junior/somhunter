import React, { useRef } from "react";
import { connect } from "react-redux";
import { Form, Row, Col, Button, Container } from "react-bootstrap";

// ---

// *** Config generated by the Core API ***
import config from "../../../__config_generated__.json";
// *** Config generated by the Core API ***

import { useSettings } from "../../../hooks/useSettings";
import { crSetQueryChanged } from "../../../actions/indicatorCreator";

function setAllWeekdays(parEl, val) {
  parEl.childNodes.forEach((el) => {
    el.childNodes[0].checked = val;
  });
}

function onFilterChangeHandler(s, props) {
  // Set query changed flag
  s.dispatch(crSetQueryChanged(s, true));
}

function FiltersPanel(props) {
  const s = useSettings();

  const weekdayContRef = useRef();

  console.debug("<FiltersPanel>: Rendering...");

  const strArr = ["M", "T", "W", "T", "F", "S", "S"];
  return (
    <Container fluid>
      <Form
        id={config.ui.htmlElIds.queryFilters}
        className="filters-panel panel row"
      >
        <Col
          ref={weekdayContRef}
          id="queryFiltersWeekdays"
          className="filter-weekdays"
        >
          {props.filters.weekdays.map((x, i) => {
            return (
              <Form.Check
                inline
                label={strArr[i]}
                type="checkbox"
                value="0"
                id={`inline-checkbox-${i}`}
                defaultChecked={x}
                onChange={(e) => {onFilterChangeHandler(s, props)} }
              />
            );
          })}

          <div className="mini-btn-cont form-check-inline">
            <Button
              className="mini-btn"
              onClick={(e) => setAllWeekdays(weekdayContRef.current, true)}
            >
              All
            </Button>
            <Button
              className="mini-btn"
              onClick={(e) => setAllWeekdays(weekdayContRef.current, false)}
              variant="danger"
            >
              Clear
            </Button>
          </div>
        </Col>
        <Col className="filter-hours">
          <div className="col-6">
            <Form.Label>From:</Form.Label>
            <Form.Control
              id={config.ui.htmlElIds.queryFiltersHourFrom}
              type="number"
              min="0"
              max="24"
              defaultValue={0}
              onChange={(e) => {onFilterChangeHandler(s, props)} }
            />
          </div>
          <div className="col-6">
            <Form.Label>To:</Form.Label>
            <Form.Control
              id={config.ui.htmlElIds.queryFiltersHourTo}
              type="number"
              min="0"
              max={24}
              defaultValue={24}
              onChange={(e) => {onFilterChangeHandler(s, props)} }
            />
          </div>
        </Col>
      </Form>
    </Container>
  );
}

const stateToProps = ({ user }) => {
  return { filters: user.search.filters };
};

export default connect(stateToProps)(FiltersPanel);
