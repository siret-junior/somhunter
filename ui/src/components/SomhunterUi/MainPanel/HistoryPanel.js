import React from "react";
import { connect } from "react-redux";
import { Container, Row, Col, Button } from "react-bootstrap";

// ---

// *** Config generated by the Core API ***
import config from "../../../__config_generated__.json";
// *** Config generated by the Core API ***
import { useSettings } from "../../../hooks/useSettings";
import { createFetchAndSwitchSearchState } from "../../../actions/userCreator";

function switchSearchSessionHandler(s, props, ctxId) {
  if (typeof ctxId === "undefined" || ctxId === null) {
    throw Error("Invalid parameters.");
  }

  s.dispatch(createFetchAndSwitchSearchState(s, ctxId));
}

function getHistoryItems(s, props) {
  const data = props.history;
  const activeId = props.search.id;

  const jsx = data.map((x, i) => {
    const scrFilepath =
      x.screenshotFilepath != ""
        ? `${config.server.uiTempImgDirPub}/${x.screenshotFilepath}`
        : `${config.server.screenshotDefault}`;

    const classSuffix = activeId === x.id ? "active" : "";

    return (
      <li
        className={`history-item ${classSuffix}`}
        key={`history${i}`}
        onClick={(e) =>
          activeId !== x.id ? switchSearchSessionHandler(s, props, x.id) : null
        }
      >
        <img src={scrFilepath} alt={x.id} />
        <span className="title">{x.id}</span>
        <span className="time">{x.time}</span>
      </li>
    );
  });

  return <>{jsx}</>;
}

function HistoryPanel(props) {
  const s = useSettings();

  return (
    <Container fluid className="history-panel panel">
      <Row>
        <Col xs={12}>
          <h1 className="panel-title"> History</h1>
          <ul className="history-list">{getHistoryItems(s, props)}</ul>
        </Col>
      </Row>
    </Container>
  );
}

const stateToProps = ({ user }) => {
  return { history: user.history, search: user.search };
};

export default connect(stateToProps)(HistoryPanel);
