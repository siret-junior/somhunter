@import "~bootstrap/scss/bootstrap";

* {
  box-sizing: border-box;
}

$theme-colors: (
  "primary": #bf1736,
  "secondary": #0d1440,
  "third": #0e2773,
  "fourth": #1438a6,
  "fifth": #1455d9,
  "white": #fff,
  "black": #222,
  "success": #4bb543,
  "danger": #ff0000,
  "warning": #fa7500,
  "green": #00ff00,
);

.w-6 {
}

.cont-btn {
  padding: 0.4rem 0.4rem 0 0;

  > .btn {
    width: 100%;
    right: -0.2rem;
    top: -0.2rem;
    position: relative;
  }
}
.btn {
  margin: 0 0.2em 0 0;
  border-radius: 0;
  border: 0;
  min-height: 2.9em;
  font-size: 1.2rem;
  > svg {
    width: 1.5em;
    height: 1.5em;
    top: -0.1em;
    position: relative;
  }

  &.enlarge {
    font-size: 1.6rem;
  }

  &:focus {
    box-shadow: 0 0 0.1rem 0.1rem map-get($theme-colors, "primary") !important;
  }

  &.btn-primary {
    background-color: map-get($theme-colors, "primary");
    border: 0.4rem solid theme-color-level($color-name: "primary", $level: 0);
    transition: 0.1s ease-in-out;

    &:hover,
    &:focus,
    &:active {
      background-color: theme-color-level($color-name: "primary", $level: -2);
      border-color: theme-color-level($color-name: "primary", $level: -2);
    }
    &.active {
      background-color: map-get($theme-colors, "primary") !important;
      border: 0.4rem solid
        theme-color-level($color-name: "secondary", $level: 0) !important;

      &:hover,
      &:focus,
      &:active {
        background-color: theme-color-level(
          $color-name: "primary",
          $level: 0
        ) !important;
      }
    }
  }

  &.btn-secondary {
    background-color: map-get($theme-colors, "fifth");
    border: 0.4rem solid theme-color-level($color-name: "fifth", $level: 0);
    transition: 0.1s ease-in-out;

    &:hover,
    &:focus,
    &:active {
      background-color: theme-color-level(
        $color-name: "fifth",
        $level: -2
      ) !important;
      border-color: theme-color-level(
        $color-name: "fifth",
        $level: -2
      ) !important;
    }

    &.active {
      background-color: map-get($theme-colors, "fifth") !important;
      border: 0.4rem solid theme-color-level($color-name: "primary", $level: 0) !important;
      &:hover,
      &:focus,
      &:active {
        background-color: theme-color-level(
          $color-name: "fifth",
          $level: 0
        ) !important;
      }
    }
  }

  &.btn-danger {
    background-color: map-get($theme-colors, "danger");
    border: 0px;
    transition: 0.1s ease-in-out;

    &:hover,
    &:focus {
      background-color: theme-color-level($color-name: "danger", $level: -2);
    }
  }
}

.form-control {
  &:focus {
    outline: 0;
    box-shadow: 0 0 0.5rem 0.6rem map-get($theme-colors, "primary");
  }
}

.critical-error-window {
  width: 100vw;
  min-width: 100vw;
  padding: 2rem;

  .btn {
    padding: 1rem 2rem;
    font-size: 1.3rem;
    margin-top: 2rem;
  }
}
.alert {
  text-align: center;
  padding: 2rem;

  .alert-heading {
    font-size: 2rem;
    margin: 0 0 0.4rem 0;
  }
  p {
    font-size: 1.2rem;
    margin: 0;
  }
}

.somhunter-ui {
  max-height: 100vh;
  overflow: hidden;
}

.overlay {
  position: absolute;
  z-index: 100;
}

.global-notification-overlay {
  display: none;
  &.active {
    display: inline;
  }
}
.debug-buttons {
  bottom: 0;
}

.frame-grid {
  height: 100vh;
  overflow: auto;
  align-items: flex-start;
  align-content: flex-start;

  &.som {
    align-content: stretch;
  }
  .btn {
    font-size: 0.6rem;
  }

  > .col-2 {
    align-self: stretch;
  }

  &.som > .col-2 {
    flex: 0 0 12.5%;
    max-width: 12.5%;
    height: auto;
  }
  &.detail {
    max-height: 100%;
    height: 100%;
  }
  &.detail > .col-2 {
    height: auto;
    flex: 0 0 12.5%;
    max-width: 12.5%;
  }
  &.replay {
    height: 20vh;
  }
}

.frame {
  position: relative;
  cursor: pointer;
  background-size: cover;
  height: min-content;

  * {
    position: absolute;
    z-index: 1;
  }

  &.no-frame {
    cursor: initial;
  }
  &.pivot {
    &:before {
      content: "";
      width: 100%;
      height: 100%;
      position: absolute;
      border: 5px solid;
      border-color: map-get($theme-colors, "primary");
    }
  }

  &.liked {
    &:before {
      content: "";
      position: absolute;
      width: 0;
      height: 0;
      border-right: 30px solid transparent;
      border-bottom: 30px solid transparent;
      border-top: 30px solid map-get($theme-colors, "success");
      border-left: 30px solid map-get($theme-colors, "success");
    }
  }

  &:after {
    content: "";
    display: block;
    position: relative;
    padding-top: 56.5%;
  }

  &:hover,
  &:focus {
    button {
      opacity: 0.5;
    }
  }

  .video-id-label {
    font-weight: 600;
    color: map-get($theme-colors, "green");
  }
  button {
    opacity: 0;
    &:hover,
    &:focus {
      opacity: 1;
    }
  }

  .top {
    top: 0;
  }
  .bottom {
    bottom: 0;
  }
  .left {
    left: 0;
  }
  .right {
    right: 0;
  }
}

.global-notification-overlay {
  left: 50%;
  top: 10%;
  transform: translate(-50%, 0);
}

.panel {
  padding-top: 0.4rem;
  padding-bottom: 0.4rem;

  &.controls-panel {
  }

  &.notification-panel {
  }

  &.bottom {
    margin-top: auto;
    margin-bottom: 0;
  }

  .panel-title {
    font-size: 1.4rem;
    text-transform: uppercase;
    text-align: center;
    padding: 0.4em 0.8em;

    &:before,
    &:after {
      border: 1px solid rgba(map-get($theme-colors, "white"), 0.7);
      content: "";
      position: relative;
      display: block;
      width: 80%;
      margin: 0 auto;
    }

    &:before {
      width: 80%;
      border: 2px solid rgba(map-get($theme-colors, "fifth"), 0.7);
      top: -0.4rem;
    }

    &:after {
      width: 45%;
      border: 1px solid rgba(map-get($theme-colors, "white"), 0.7);
      bottom: -0.4rem;
    }
  }
}

.panel.main {
  height: 100%;
  background-color: map-get($theme-colors, "secondary");
  display: flex;
  flex-direction: column;

  * {
    color: map-get($theme-colors, "white");
  }
}

.text-search-form {
  .indented {
    padding-left: 1rem;
  }
}

.settings-modal {
  p {
    margin: 0;
  }
}

.notifications-panel {
  .alert {
    padding: 0.4rem;
    font-size: 1rem;
    color: map-get($theme-colors, "white");
    border-color: map-get($theme-colors, "white");

    &.alert-danger {
      background-color: map-get($theme-colors, "danger");
    }

    &.alert-warning {
      background-color: map-get($theme-colors, "warning");
    }
  }
}

.text-search-input {
  position: relative;

  input {
    color: map-get($theme-colors, "black") !important;
    background: map-get($theme-colors, "white");
  }
  .suggestions {
    margin: 0;
    padding: 0rem;
    list-style: none;
    position: absolute;
    z-index: 2;
    background: rgba(
      theme-color-level($color-name: "primary", $level: -5),
      0.9
    );
    width: 120%;

    li {
      padding: 0.3rem 1rem 0.3rem 1rem;
      cursor: pointer;
      &:hover,
      &:focus {
        background: theme-color-level($color-name: "primary", $level: -2);
      }

      &.active {
        background: theme-color-level($color-name: "primary", $level: 0);
      }

      .keyword {
        font-size: 1.6em;
        margin: 0.1em 0 0.1em 0;
        padding: 0;
      }
    }

    .description {
      font-size: 0.8em;
      margin: 0;
      padding: 0;
    }

    .example-images {
      margin: 0;
      padding: 0;
      list-style: none;
      img {
        max-width: 20%;
      }
    }
  }
}

.detail-window {
  .modal-dialog {
    width: 80vw;
    height: 80vh;
    max-width: 80vw;
    max-height: 80vh;
    display: block;
    position: relative;

    .modal-content {
      height: 100%;
      .modal-header {
        display: block;
        position: relative;
        height: 7%;
        text-align: center;
      }

      .modal-body {
        display: block;
        position: relative;
        height: 82%;
        > * {
          height: 100%;
          position: relative;
          .frame-gird {
            height: 100%;
            position: relative;
          }
        }
      }

      .modal-footer {
        display: block;
        position: relative;
      }
    }
  }
}

.replay-window {
  position: absolute;
  width: 100vw;
  height: auto;
  .modal-dialog {
    width: 100%;
    height: auto;
    max-width: 100%;
    margin: 0;
    padding: 0;
    left: 0px;
    position: relative;

    .modal-header {
      display: none;
    }
    .frame-grid {
      position: relative;
      flex-wrap: nowrap;
      width: auto;
      width: max-content;
      > .col-2 {
        flex: 0 0 100px;
        max-width: 100px;
        min-width: 100px;
        align-self: stretch;
      }
    }
  }
}

.history-list {
  list-style: none;
  display: block;
  margin: 0;
  padding: 0;

  .history-item {
    width: 20%;
    display: inline-block;
    padding: 0.2rem 0.2rem;
    position: relative;

    transition: 0.1s ease-in-out;
    cursor: pointer;
    opacity: 0.6;

    &:hover,
    &:focus {
      opacity: 1;
    }

    img {
      display: block;
      width: 100%;
      max-height: 60px;
    }
    .title {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      color: theme-color-level($color-name: "green", $level: 0);
    }
  }
}

.text-query {
  display: flex;
  .text-search-input {
    flex: 1 1 auto;
  }
  .sub-frame-text-query-cont {
    flex: 0 0 20%;
    max-width: 20%;
  }
}

.sub-frame-text-query-cont {
  position: relative;
  display: flex;
  flex-wrap: wrap;
  padding: 0 0 0 0.5rem;

  
  .sub-query-tile {
    flex: 0 0 33.33%;
    max-width: 33.33%;
    position: relative;
    border: 1px solid theme-color-level($color-name: "black", $level: 0);
    background: theme-color-level($color-name: "black", $level: -5);
    margin: -1px 0 0 -1px;
    cursor: pointer;

    &.active {
      //background: theme-color-level($color-name: "green", $level: -3) !important;

      .toggle {
        display: block;
        display: flex;
        width: 20rem;
        background: rgba(theme-color-level($color-name: "primary", $level: 0), 0.7);
        z-index: 4;
        padding: 1rem 1rem;
        bottom: 100%;
      }
    }

    &.edited {
      background: theme-color-level($color-name: "green", $level: 0) !important;
    }

    &:hover,
    &:focus {

      background: theme-color-level($color-name: "black", $level: -3);



      .label {
        opacity: 0;
      }
    }

    .label {
      position: absolute;
      opacity: 0;
      width: 10rem;
      display: block;
      bottom: 100%;
      pointer-events: none;
      z-index: 3;
      background-color: theme-color-level($color-name: "primary", $level: 0);
      padding: 0.4rem 0.5rem;
    }

    .toggle {
      position: absolute;
      display: none;
    }
  }
}
